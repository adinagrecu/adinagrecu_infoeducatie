//package org.firstinspires.ftc.teamcode.drive.opmode;
//
//import com.acmerobotics.roadrunner.geometry.Pose2d;
//import com.acmerobotics.roadrunner.geometry.Vector2d;
//import com.acmerobotics.roadrunner.path.heading.HeadingInterpolator;
//import com.acmerobotics.roadrunner.trajectory.Trajectory;
//import com.acmerobotics.roadrunner.trajectory.TrajectoryBuilder;
//import com.acmerobotics.roadrunner.trajectory.TrajectoryBuilderKt;
//import com.acmerobotics.roadrunner.trajectory.constraints.MecanumConstraints;
//import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
//import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
//import com.qualcomm.robotcore.hardware.Servo;
//
//import org.firstinspires.ftc.robotcore.external.navigation.Rotation;
//import org.firstinspires.ftc.teamcode.VisionEasyOpenCv.skystoneDetectorClass;
//import org.firstinspires.ftc.teamcode.drive.mecanum.SampleMecanumDriveBase;
//import org.firstinspires.ftc.teamcode.drive.mecanum.SampleMecanumDriveREV;
//import org.firstinspires.ftc.teamcode.drive.mecanum.SampleMecanumDriveREVOptimized;
//import org.opencv.core.Mat;
//
//import kotlin.Unit;
//
//import static org.firstinspires.ftc.teamcode.drive.DriveConstants.BASE_CONSTRAINTS;
//import static org.firstinspires.ftc.teamcode.drive.DriveConstants.FAST_CONSTRAINTS;
//import static org.firstinspires.ftc.teamcode.drive.DriveConstants.ONEBIG_CONSTRAINTS;
//import static org.firstinspires.ftc.teamcode.drive.DriveConstants.SLOW_CONSTRAINTS;
//import static org.firstinspires.ftc.teamcode.drive.DriveConstants.TRACK_WIDTH;
//
///*
// * This is an example of a more complex path to really test the tuning.
// */
//@Autonomous(name ="AutonomieAlbastru" ,group = "drive")
//public class AutoBLUE extends LinearOpMode {
//
//    Servo agataStanga;
//    Servo agataDreapta;
//    Servo prindeManaFata = null;
//    Servo lasaManaFata = null;
//    Servo lasaManaSpate = null;
//    Servo prindeManaSpate = null;
//    Servo prindeCap = null;
//
//
//    @Override
//    public void runOpMode() throws InterruptedException {
//        skystoneDetectorClass detector = new skystoneDetectorClass();
//        int[] vals;
//        detector.camSetup(hardwareMap);
//        SampleMecanumDriveBase drive = new SampleMecanumDriveREVOptimized(hardwareMap);
//        prindeCap = hardwareMap.servo.get("prindeCap");
//        lasaManaSpate = hardwareMap.servo.get("lasaManaSpate");
//        prindeManaSpate = hardwareMap.servo.get("prindeManaSpate");
//        lasaManaFata = hardwareMap.servo.get("lasaManaFata");
//        prindeManaFata = hardwareMap.servo.get("prindeManaFata");
//        agataDreapta = hardwareMap.servo.get("tablitaDreapta");
//        agataStanga = hardwareMap.servo.get("tablitaStanga");
//
//        vals = detector.getVals();
//
//        while(vals[1]!=69 && vals[0]!=69 && vals[2]!=69 && !opModeIsActive() && !isStopRequested()){
//            detector.updateVals();
//            vals = detector.getVals();
//            telemetry.addData("Values", vals[1]+ "   " +vals[0]+"   "+vals[2]);
//            telemetry.addData("updating","vals");
//            telemetry.update();
//        }
//        if(isStopRequested()){
//            vals[0]=-1;
//            vals[1]=-1;
//            vals[2]=-1;
//        }
//        telemetry.clear();
//        telemetry.addData("Values", vals[1]+ "   " +vals[0]+"   "+vals[2]);
//        telemetry.addData("Calibration " , "done");
//        telemetry.update();
//
//        waitForStart();
//        prindeCap.setPosition(1);
//
//        agataStanga.setDirection(Servo.Direction.FORWARD);
//        agataDreapta.setDirection(Servo.Direction.REVERSE);
//
//        prindeManaSpate.setDirection(Servo.Direction.REVERSE);
//
//        prindeManaSpate.setPosition(0);
//        lasaManaSpate.setPosition(0);
//        lasaManaFata.setPosition(0);
//        prindeManaFata.setPosition(0);
//
//        if (isStopRequested()) return;
//
////     drive.followTrajectorySync(
////               drive.trajectoryBuilder()
////                       .splineTo(new Pose2d(30, 30, 0))
////                       .build()
////       );
////
////       sleep(2000);
////
////       drive.followTrajectorySync(
////               drive.trajectoryBuilder()
////                       .reverse()
////                       .splineTo(new Pose2d(0, 0, 0))
////                       .build()
////       );
//
//        if(vals[0] == 0){//mijloc
//            cazCentruAlbastru(drive);
//        } else if(vals[1] == 0) {//stanga
//            cazStangaAlbastru(drive);
//        } else {//dreapta
//            cazDreaptaAlbastru(drive);
//        }
//
//    }
//
//
//    public void prindeSpate(){
//        lasaManaSpate.setPosition(1);
//        sleep(200);
//        prindeManaSpate.setPosition(1);
//        sleep(550);
//        lasaManaSpate.setPosition(0);
//    }
//    public void lasaSpate(){
//        lasaManaSpate.setPosition(1);
//        sleep(80);
//        prindeManaSpate.setPosition(0);
//        sleep(200);
//        lasaManaSpate.setPosition(0);
//    }
//
//    public void prinde(){
//        lasaManaFata.setPosition(1);
//        sleep(200);
//        prindeManaFata.setPosition(1);
//        sleep(550);
//        lasaManaFata.setPosition(0);
//    }
//    public void lasa(){
//        lasaManaFata.setPosition(1);
//        sleep(80);
//        prindeManaFata.setPosition(0);
//        sleep(200);
//        lasaManaFata.setPosition(0);
//    }
//
//
//    public void cazStangaAlbastru(SampleMecanumDriveBase drive){
//        lasaManaFata.setPosition(0.5);
//        //TODO 1 cub
//        drive.followTrajectorySync(drive.trajectoryBuilder().strafeTo(new Vector2d(9.2,26)).build());
//        prinde();
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(9.2,26,0), new MecanumConstraints(FAST_CONSTRAINTS, TRACK_WIDTH))
//                .reverse()
//                .strafeTo(new Vector2d(-20,23))
//                .strafeTo(new Vector2d(-60,23))
//                .strafeTo(new Vector2d(-80,28.5))
//                .build());
//        lasa();
//        //TODO 2 cub
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-80,28.5,0),new MecanumConstraints(FAST_CONSTRAINTS,TRACK_WIDTH))
//                .strafeTo(new Vector2d(-45,24.5))
//                .strafeTo(new Vector2d(-35,24.5))
//                .strafeTo(new Vector2d(-16.6,30.4))
//                .build());
//        prinde();
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-16.6,30.4 ,0),new MecanumConstraints(FAST_CONSTRAINTS,TRACK_WIDTH))
//                .reverse()
//                .strafeTo(new Vector2d(-25,24.8))
//                .strafeTo(new Vector2d(-60,24.8))
//                .strafeTo(new Vector2d(-87,30.2))
//                .build());
//        lasa();
//        //TODO 3 cub
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-87,30.2,0),new MecanumConstraints(FAST_CONSTRAINTS,TRACK_WIDTH))
//                .strafeTo(new Vector2d(-60,24.5))
//                .strafeTo(new Vector2d(-35,24.5))
//                .strafeTo(new Vector2d(-7.7,30.1))
//                .build());
//        prinde();
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-7.7,30.1,0),new MecanumConstraints(FAST_CONSTRAINTS,TRACK_WIDTH))
//                .reverse()
//                .strafeTo(new Vector2d(-25,24.5))
//                .strafeTo(new Vector2d(-80,24.5))//-80 23
//                .strafeTo(new Vector2d(-92,30.5)) //x =-100 y=29.5
//                .build());
//        lasa();
////        //TODO 4 cub
////        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-95,30.5,0),new MecanumConstraints(FAST_CONSTRAINTS,TRACK_WIDTH))
////                .strafeTo(new Vector2d(-60,24.5))
////                .strafeTo(new Vector2d(-20,24.5))
////                .strafeTo(new Vector2d(9.5,30.9))
////                .build()
////        );
////        prindeSpate();
////        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(9.5 ,30.9,0),new MecanumConstraints(FAST_CONSTRAINTS,TRACK_WIDTH))
////                .reverse()
////                .strafeTo(new Vector2d(-10,24.8))
////                .strafeTo(new Vector2d(-80,24.8))//-80 23
////                .strafeTo(new Vector2d(-90,30.45)) //x =-100 y=29.5
////                .build());
////        lasaSpate();
//
//
//
//
//
//
//        //TODO FUNDATIE
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-92,30.5,0),new MecanumConstraints(ONEBIG_CONSTRAINTS,TRACK_WIDTH))
//                .strafeTo(new Vector2d(-89,27.5))
//                .build());
//        drive.turnSync(Math.toRadians(-90));
//
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-89,27.5,Math.toRadians(-90)),new MecanumConstraints(ONEBIG_CONSTRAINTS,TRACK_WIDTH))
//                .strafeTo(new Vector2d(-84.5,33))
//                .build());
//        agataStanga.setPosition(0);
//        agataDreapta.setPosition(0);
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-84.5,33,Math.toRadians(-90)),new MecanumConstraints(FAST_CONSTRAINTS,TRACK_WIDTH))
//                .strafeTo(new Vector2d(-82,37.5))
//                .build());
//
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-82,37.5,Math.toRadians(-90)), new MecanumConstraints(ONEBIG_CONSTRAINTS,TRACK_WIDTH))
//                .forward(20)
//                .build());
//        drive.turnSync(Math.toRadians(90));
//
//        agataDreapta.setPosition(1);
//        agataStanga.setPosition(1);
//        //TODO PARCARE
//        drive.followTrajectorySync(new TrajectoryBuilder(drive.getPoseEstimate(), new MecanumConstraints(BASE_CONSTRAINTS, TRACK_WIDTH))
//                .strafeTo(new Vector2d(-40 ,32))
//                .build());
//
//    }
//
//    public void cazDreaptaAlbastru(SampleMecanumDriveBase drive){
//
//        lasaManaFata.setPosition(0.5);
//        //TODO 1 cub
//        drive.followTrajectorySync(drive.trajectoryBuilder().strafeTo(new Vector2d(25,26.5)).build());
//        prinde();
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(25,26.5,0), new MecanumConstraints(FAST_CONSTRAINTS, TRACK_WIDTH))
//                .reverse()
//                .strafeTo(new Vector2d(-20,23))
//                .strafeTo(new Vector2d(-60,23))
//                .strafeTo(new Vector2d(-78,29))
//                .build());
//        lasa();
//        //TODO 2 cub
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-78,29,0),new MecanumConstraints(FAST_CONSTRAINTS,TRACK_WIDTH))
//                .strafeTo(new Vector2d(-45,24.5))
//                .strafeTo(new Vector2d(-20,24.5))
//                .strafeTo(new Vector2d(0,30.6))
//                .build());
//        prinde();
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(0,30.6,0),new MecanumConstraints(FAST_CONSTRAINTS,TRACK_WIDTH))
//                .reverse()
//                .strafeTo(new Vector2d(-20,24))
//                .strafeTo(new Vector2d(-60,24))
//                .strafeTo(new Vector2d(-88,31.3))
//                .build());
//        lasa();
//        //TODO 3 cub
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-88,31.3,0),new MecanumConstraints(FAST_CONSTRAINTS,TRACK_WIDTH))
//                .strafeTo(new Vector2d(-60,24.5))
//                .strafeTo(new Vector2d(-35,24.5))
//                .strafeTo(new Vector2d(-15.95,30.45))
//                .build());
//        prinde();
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-15.95,30.45,0),new MecanumConstraints(FAST_CONSTRAINTS,TRACK_WIDTH))
//                .reverse()
//                .strafeTo(new Vector2d(-25,24.5))
//                .strafeTo(new Vector2d(-80,24.5))//-80 23
//                .strafeTo(new Vector2d(-92,30.4)) //x =-100 y=29.5
//                .build());
//        lasa();
////        //TODO 4 cub
////        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-92,30.4,0),new MecanumConstraints(FAST_CONSTRAINTS,TRACK_WIDTH))
////                .strafeTo(new Vector2d(-60,24.5))
////                .strafeTo(new Vector2d(-20,24.5))
////                .strafeTo(new Vector2d(0.95,30.75))
////                .build()
////        );
////        prindeSpate();
////        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(0.95,30.75,0),new MecanumConstraints(FAST_CONSTRAINTS,TRACK_WIDTH))
////                .reverse()
////                .strafeTo(new Vector2d(-10,24.8))
////                .strafeTo(new Vector2d(-80,24.8))//-80 23
////                .strafeTo(new Vector2d(-90.5,31.5)) //x =-100 y=29.5
////                .build());
////        lasaSpate();
//
//
//
//
//
//
//        //TODO FUNDATIE
//        agataDreapta.setPosition(1);
//        agataStanga.setPosition(1);
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-92,30.4,0),new MecanumConstraints(ONEBIG_CONSTRAINTS,TRACK_WIDTH))
//                .strafeTo(new Vector2d(-89,27.5))
//                .build());
//        drive.turnSync(Math.toRadians(-90));
//
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-89,27.5,Math.toRadians(-90)),new MecanumConstraints(ONEBIG_CONSTRAINTS,TRACK_WIDTH))
//                .strafeTo(new Vector2d(-84.5,33))
//                .build());
//        agataStanga.setPosition(0);
//        agataDreapta.setPosition(0);
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-84.5,33,Math.toRadians(-90)),new MecanumConstraints(ONEBIG_CONSTRAINTS,TRACK_WIDTH))
//                .strafeTo(new Vector2d(-82,37.5))
//                .build());
//
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-82,37.5,Math.toRadians(-90)), new MecanumConstraints(ONEBIG_CONSTRAINTS,TRACK_WIDTH))
//                .forward(20)
//                .build());
//        drive.turnSync(Math.toRadians(90));
//
//        agataDreapta.setPosition(1);
//        agataStanga.setPosition(1);
//        //TODO PARCARE
//        drive.followTrajectorySync(new TrajectoryBuilder(drive.getPoseEstimate(), new MecanumConstraints(BASE_CONSTRAINTS, TRACK_WIDTH))
//                .strafeTo(new Vector2d(drive.getPoseEstimate().getX()+38 ,drive.getPoseEstimate().getY()+18))
//                .build());
//
//
//    }
//
//    public void cazCentruAlbastru(SampleMecanumDriveBase drive){
//        lasaManaFata.setPosition(0.5);
//        //TODO 1 cub
//        drive.followTrajectorySync(drive.trajectoryBuilder().strafeTo(new Vector2d(16.7,26.9)).build());
//        prinde();
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(16.7,26.9,0), new MecanumConstraints(FAST_CONSTRAINTS, TRACK_WIDTH))
//                .reverse()
//                .strafeTo(new Vector2d(-20,23))
//                .strafeTo(new Vector2d(-60,23))
//                .strafeTo(new Vector2d(-80,28.7))
//                .build());
//        lasa();
//        //TODO 2 cub
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-80,28.7,0),new MecanumConstraints(FAST_CONSTRAINTS,TRACK_WIDTH))
//                .strafeTo(new Vector2d(-45,24.5))
//                .strafeTo(new Vector2d(-20,24.5))
//                .strafeTo(new Vector2d(-7.95,31))
//                .build());
//        prinde();
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-7.95,31,0),new MecanumConstraints(FAST_CONSTRAINTS,TRACK_WIDTH))
//                .reverse()
//                .strafeTo(new Vector2d(-20,24))
//                .strafeTo(new Vector2d(-60,24))
//                .strafeTo(new Vector2d(-87,29.5))
//                .build());
//        lasa();
//        //TODO 3 cub
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-87,29.5,0),new MecanumConstraints(FAST_CONSTRAINTS,TRACK_WIDTH))
//                .strafeTo(new Vector2d(-60,24.5))
//                .strafeTo(new Vector2d(-35,24.5))
//                .strafeTo(new Vector2d(-16.1,30.3))
//                .build());
//        prinde();
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-16.1,30.3,0),new MecanumConstraints(FAST_CONSTRAINTS,TRACK_WIDTH))
//                .reverse()
//                .strafeTo(new Vector2d(-25,24.5))
//                .strafeTo(new Vector2d(-80,24.5))//-80 23
//                .strafeTo(new Vector2d(-92,30)) //x =-100 y=29.5
//                .build());
//        lasa();
////        //TODO 4 cub
////        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-92,30,0),new MecanumConstraints(FAST_CONSTRAINTS,TRACK_WIDTH))
////                .strafeTo(new Vector2d(-60,24.5))
////                .strafeTo(new Vector2d(-20,24.5))
////                .strafeTo(new Vector2d(9.3,31))
////                .build()
////        );
////        prindeSpate();
////        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(9.3,31,0),new MecanumConstraints(FAST_CONSTRAINTS,TRACK_WIDTH))
////                .reverse()
////                .strafeTo(new Vector2d(-10,24.8))
////                .strafeTo(new Vector2d(-80,24.8))//-80 23
////                .strafeTo(new Vector2d(-94,31.3)) //x =-100 y=29.5
////                .build());
////        lasaSpate();
//
//
//
//
//
//
//        //TODO FUNDATIE
//        agataDreapta.setPosition(1);
//        agataStanga.setPosition(1);
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-92,30,0),new MecanumConstraints(ONEBIG_CONSTRAINTS,TRACK_WIDTH))
//                .strafeTo(new Vector2d(-89,27.5))
//                .build());
//        drive.turnSync(Math.toRadians(-90));
//
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-89,27.5,Math.toRadians(-90)),new MecanumConstraints(ONEBIG_CONSTRAINTS,TRACK_WIDTH))
//                .strafeTo(new Vector2d(-84.5,33))
//                .build());
//        agataStanga.setPosition(0);
//        agataDreapta.setPosition(0);
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-84.5,33,Math.toRadians(-90)),new MecanumConstraints(ONEBIG_CONSTRAINTS,TRACK_WIDTH))
//                .strafeTo(new Vector2d(-82,37.5))
//                .build());
//
//        drive.followTrajectorySync(new TrajectoryBuilder(new Pose2d(-82,37.5,Math.toRadians(-90)), new MecanumConstraints(ONEBIG_CONSTRAINTS,TRACK_WIDTH))
//                .forward(20)
//                .build());
//        drive.turnSync(Math.toRadians(90));
//
//        agataDreapta.setPosition(1);
//        agataStanga.setPosition(1);
//        //TODO PARCARE
//        drive.followTrajectorySync(new TrajectoryBuilder(drive.getPoseEstimate(), new MecanumConstraints(ONEBIG_CONSTRAINTS, TRACK_WIDTH))
//                .strafeTo(new Vector2d(drive.getPoseEstimate().getX()+38 ,drive.getPoseEstimate().getY()+19))
//                .build());
//
//
//    }
//
//
//}
