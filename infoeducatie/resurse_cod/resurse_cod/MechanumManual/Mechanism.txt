package org.firstinspires.ftc.teamcode.MechanumTeleOp;

import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;
import com.qualcomm.robotcore.hardware.HardwareMap;
import com.qualcomm.robotcore.hardware.Servo;

import org.firstinspires.ftc.robotcore.external.Telemetry;
import org.firstinspires.ftc.teamcode.Libs.GAMEPAD;

public class Mechanism {
    Telemetry telemetry;
    private DcMotor intakeDreapta = null;
    private DcMotor intakeStanga = null;

    private Servo tablitaDreapta = null;
    private Servo tablitaStanga = null;
    private Servo rotesteManaFata = null;

    private Servo lasaManaFata;

    Servo prindeManaFata = null;

    Servo prindeManaSpate = null;
    Servo lasaManaSpate = null;


//    private CRServo ruleta = null;

    GAMEPAD gamepad1;
    GAMEPAD gamepad2;

    private void initMechanism(HardwareMap hardwareMap){
        this.intakeDreapta = hardwareMap.dcMotor.get("motorSugeDreapta");
        this.intakeStanga = hardwareMap.dcMotor.get("motorSugeStanga");

        lasaManaFata = hardwareMap.servo.get("lasaManaFata");
        prindeManaFata = hardwareMap.servo.get("prindeManaFata");
        rotesteManaFata = hardwareMap.servo.get("rotesteManaFata");

        rotesteManaFata.setPosition(0.2);
        prindeManaFata.setPosition(1);
        lasaManaFata.setPosition(0);

        prindeManaSpate = hardwareMap.servo.get("prindeManaSpate");
        lasaManaSpate = hardwareMap.servo.get("lasaManaSpate");

        intakeDreapta.setDirection(DcMotorSimple.Direction.FORWARD);
        intakeStanga.setDirection(DcMotorSimple.Direction.REVERSE);

        intakeDreapta.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
        intakeStanga.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);

        this.tablitaStanga = hardwareMap.servo.get("tablitaStanga");
        this.tablitaDreapta = hardwareMap.servo.get("tablitaDreapta");
//        this.ruleta = hardwareMap.crservo.get("ruleta");

        tablitaStanga.setDirection(Servo.Direction.FORWARD);
        tablitaDreapta.setDirection(Servo.Direction.REVERSE);
        prindeManaSpate.setDirection(Servo.Direction.REVERSE);

        lasaManaSpate.setPosition(0);
        prindeManaSpate.setPosition(0);

        tablitaStanga.setPosition(1);
        tablitaDreapta.setPosition(1);

    }

    Mechanism(HardwareMap hardwareMap, GAMEPAD gamepad1, GAMEPAD gamepad2,Telemetry telemetry){
        this.gamepad1 = gamepad1;
        this.gamepad2 = gamepad2;
        this.telemetry = telemetry;
        initMechanism(hardwareMap);
    }

    void tablita(){
        if(gamepad1.x.toggle){
            tablitaStanga.setPosition(1);
            tablitaDreapta.setPosition(1);
        }else{
            tablitaStanga.setPosition(0);
            tablitaDreapta.setPosition(0);
        }
    }

    void suge(){
        double putere = 0.7;
        if(gamepad1.right_trigger > 0.3 || gamepad2.right_trigger > 0.3){
            intakeDreapta.setPower(putere);
            intakeStanga.setPower(putere);
        }else if(gamepad1.left_trigger > 0.3 || gamepad2.left_trigger > 0.3){
            intakeDreapta.setPower(-putere);
            intakeStanga.setPower(-putere);
        }else{
            intakeDreapta.setPower(0);
            intakeStanga.setPower(0);
        }
    }

    void telemetryAdder(){
        telemetry.addData("encoder Stanga", intakeStanga.getCurrentPosition());
        telemetry.addData("encoder Dreapta", intakeDreapta.getCurrentPosition());
    }







//    void ruleta(){
//        if(gamepad1.left_bumper.value){
//            ruleta.setPower(0.5);
//        }else if(gamepad1.right_bumper.value ){
//            ruleta.setPower(-0.5);
//        }else{
//            ruleta.setPower(0);
//        }
//    }



}
